# Generated by Django 2.1.3 on 2018-11-19 22:15

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [("account", "__first__"), ("taggit", "0002_auto_20150616_2121"), ("common", "0001_initial")]

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("show_username", models.BooleanField()),
                ("text", models.TextField()),
                ("is_accepted", models.BooleanField()),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_answer_comments",
                        to="account.Profile",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("show_username", models.BooleanField()),
                ("text", models.TextField()),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_comment_comments",
                        to="account.Profile",
                    ),
                ),
                (
                    "parent_answer",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, related_name="comments", to="question.Answer"
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, unique=True, verbose_name="Name")),
                ("slug", models.SlugField(max_length=100, unique=True, verbose_name="Slug")),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="courses", to="account.Profile"
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("show_username", models.BooleanField()),
                ("text", models.TextField()),
                ("title", models.CharField(max_length=255)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_question_comments",
                        to="account.Profile",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "votes",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name="question_comment_item", to="common.Votes"
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.AddField(
            model_name="comment",
            name="parent_question",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name="comments", to="question.Question"
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="votes",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name="comment_comment_item", to="common.Votes"
            ),
        ),
        migrations.AddField(
            model_name="answer",
            name="parent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="answers", to="question.Question"
            ),
        ),
        migrations.AddField(
            model_name="answer",
            name="votes",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name="answer_comment_item", to="common.Votes"
            ),
        ),
    ]
