# Generated by Django 2.1 on 2018-08-13 19:28

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('show_username', models.BooleanField()),
                ('text', models.TextField()),
                ('is_accepted', models.BooleanField()),
                ('downvoters', models.ManyToManyField(related_name='question_answer_downvotes', to='account.Profile')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_answer_comments', to='account.Profile')),
                ('upvoters', models.ManyToManyField(related_name='question_answer_upvotes', to='account.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('show_username', models.BooleanField()),
                ('text', models.TextField()),
                ('downvoters', models.ManyToManyField(related_name='question_comment_downvotes', to='account.Profile')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_comment_comments', to='account.Profile')),
                ('upvoters', models.ManyToManyField(related_name='question_comment_upvotes', to='account.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='account.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('show_username', models.BooleanField()),
                ('text', models.TextField()),
                ('title', models.CharField(max_length=255)),
                ('downvoters', models.ManyToManyField(related_name='question_question_downvotes', to='account.Profile')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_question_comments', to='account.Profile')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('upvoters', models.ManyToManyField(related_name='question_question_upvotes', to='account.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
